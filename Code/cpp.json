{
    "CP Template": {
        "prefix": "cpp",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std; using ll = long long;",
            "#define nl \"\\n\"",
            "",
            "template <typename A, typename B>ostream& operator<<(ostream& os, const pair<A, B>& p) { return os << '(' << p.first << ' ' << p.second << ')'; }",
            "template <typename X, typename T = typename enable_if<!is_same<X, string>::value, typename X::value_type>::type>  ostream& operator<<(ostream& o, const X& v) { string s;  for (const T& x : v) o << s << x, s = \" \";  return o; }",
            "void deb() { cout << \"\\n\"; }",
            "template <typename Head, typename... Tail>void deb(Head H, Tail... T){cout << H << ' ', deb(T...);}",
            "#ifdef LOCAL",
            "#define dbg(...) cout << \"[\" << #__VA_ARGS__ << \"]:\", deb(__VA_ARGS__)",
            "#else",
            "#define dbg(...)",
            "#endif",
            "",
            "const int N = ${1:2e6 + 10};",
            "void solve() {",
            "}",
            "",
            "int main() {",
            "#ifndef LOCAL",
            "\tios_base::sync_with_stdio(false);",
            "\tcin.tie(NULL);",
            "#endif",
            "\tint T = 1;",
            "\tcin >> T;",
            "\twhile (T--) solve();",
            "\treturn 0;",
            "}"
        ],
        "description": "CP Template"
    },
    "Infinity": {
        "prefix": "inff",
        "body": [
            "const ll INF = 0x7f7f7f7f7f7f7f7f;",
            "const int inf = 0x7f7f7f7f;",
        ]
    },
    "Debug": {
        "prefix": "dbgg",
        "body": [
            "template<typename A, typename B> ostream& operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << \",\" << p.second << ')'; }",
            "template<typename X,typename T=typename enable_if<!is_same<X,string>::value,typename X::value_type>::type>ostream& operator<<(ostream &o,const X &v){o<<'{';string s;for(const T &x:v)o<<s<<x,s=\", \";return o<<'}';}",
            "void deb() { cout << \"\\n\"; }",
            "template<typename Head, typename... Tail> void deb(Head H, Tail... T) { cerr << ' ' << H; deb(T...); }",
            "#ifdef LOCAL",
            "#define dbg(...) cerr << \"[\" << #__VA_ARGS__ << \"]:\", deb(__VA_ARGS__)",
            "#else",
            "#define dbg(...)",
            "#endif",
            "",
        ],
        "description": "Adds debug statements"
    },
    "CP Template-Google Code Jam": {
        "prefix": "vsgcj",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "using ll = long long;",
            "",
            "#define  nl \"\\n\"",
            "#define  FOR(i, a, n) for (ll i = a; i <= n; i++)",
            "#define  ROF(i, a, n) for (ll i = a; i >= n; i--)",
            "#define  all(x) (x).begin()+1, (x).end()",
            "#define  All(x) (x).begin(), (x).end()",
            "const ll INF = 0x7f7f7f7f7f7f7f7f;",
            "const int inf = 0x7f7f7f7f;",
            "",
            "$0",
            "void solve(int esac) {",
            "\tcout << \"Case #\" << esac << \": \";",
            "}",
            "",
            "int main() {",
            "\tios_base::sync_with_stdio(false);",
            "\tcin.tie(NULL);",
            "\tint T=1;",
            "\tcin >> T;",
            "\tFOR(i,1,T) solve(i);",
            "\treturn 0;",
            "}",
        ],
        "description": "CP Template-Google Code Jam"
    },
    "vi": {
        "prefix": "vi",
        "body": "vector<int> $0",
        "description": "vi"
    },
    "vll": {
        "prefix": "vll",
        "body": "vector<ll> $0",
        "description": "vll"
    },
    "vvi": {
        "prefix": "vvi",
        "body": "vector<vector<int>> $0",
        "description": "vvi"
    },
    "vvll": {
        "prefix": "vvll",
        "body": "vector<vector<ll>> $0",
        "description": "vvll"
    },
    "vpii": {
        "prefix": "vpii",
        "body": "vector<pair<int, int>> $0",
        "description": "vpii"
    },
    "pii": {
        "prefix": "pii",
        "body": "pair<int, int> $0",
        "description": "pii"
    },
    "mii": {
        "prefix": "mii",
        "body": "map<int, int> $0",
        "description": "mii"
    },
    "pll": {
        "prefix": "pll",
        "body": "pair<ll, ll> $0",
        "description": "pll"
    },
    "pb": {
        "prefix": "pb",
        "body": "push_back($0)",
        "description": "push_back"
    },
    "gcdll": {
        "prefix": "gcdll",
        "body": [
            "ll gcdll(ll a, ll b) {",
            "\tif (a == 0) return b;",
            "\treturn gcd(b%a, a);",
            "}"
        ],
        "description": "gcd for ll"
    },
    "sieve": {
        "prefix": "sieve",
        "body": [
            "int sieve_size = $0;",
            "void sieve() {",
            "\tvector<bool> prime(sieve_size+10, 1);",
            "\tprime[0] = prime[1] = false;",
            "\tfor(int i=2; i<=sieve_size; i++) {",
            "\t\tif (prime[i] and (ll)i*i <= sieve_size)",
            "\t\t\tfor(int j = i*i; j<=sieve_size; j+=i) prime[j] = false;",
            "\t}",
            "}",
            ""
        ],
        "description": "sieve in O(nlg(lg(n)))"
    },
    "all": {
        "prefix": "vin",
        "body": "$1.begin()+1, $1.end()",
    },
    "ALL": {
        "prefix": "Vin",
        "body": "$1.begin(), $1.end()",
    },
    "aall": {
        "prefix": "ain",
        "body": "$1+1, $1+$2+1",
    },
    "Aall": {
        "prefix": "Ain",
        "body": "$1, $1+$2",
    },
    "forn": {
        "prefix": "ffi",
        "body": "for (int $1=$2; $1 < $3; $1++) $0"
    },
    "fornn": {
        "prefix": "ffie",
        "body": "for (int $1=$2; $1 <= $3; $1++) $0"
    },
    "rforn": {
        "prefix": [
            "ieff",
            "iff"
        ],
        "body": "for (int $1=$2; $1 >= $3; $1--) $0"
    },
    "lirep": {
        "prefix": "ffl",
        "body": "for (ll $1=$2; $1 < $3; $1++) $0"
    },
    "lrep": {
        "prefix": "ffle",
        "body": "for (ll $1=$2; $1 <= $3; $1++) $0"
    },
    "blrep": {
        "prefix": [
            "elff",
            "eff"
        ],
        "body": "for (ll $1=$2; $1 >= $3; $1--) $0"
    },
    "iter": {
        "prefix": "iter",
        "body": "for (auto& $1 : $2) $0"
    },
    "binexp": {
        "prefix": "binexp",
        "body": [
            "long long binpow(long long a, long long b, long long m) {",
            "\ta %= m;",
            "\tlong long res = 1;",
            "\twhile (b > 0) {",
            "\t\tif (b & 1)",
            "\t\t\tres = res * a % m;",
            "\t\ta = a * a % m;",
            "\t\tb >>= 1;",
            "\t}",
            "\treturn res;",
            "}"
        ]
    }
}