DATA SEGMENT
M DB 2
N DB 3
A DB 6,5,4,3,2,1
B DB 6,5,4,3,2,1

OUTPUT DB 100 DUP('$')
DATA ENDS

CODE SEGMENT
ASSUME CS:CODE,DS:DATA

START:
MOV AX, DATA
MOV DS, AX

MOV AH, 01H
INT 21H
SUB AL, 30H
MOV [M], AL
MOV AH, 02H
MOV DL, 0AH
INT 21H
MOV DL, 0DH
INT 21H

MOV AH, 01H
INT 21H
SUB AL, 30H
MOV [N], AL
MOV AH, 02H
MOV DL, 0AH
INT 21H
MOV DL, 0DH
INT 21H

MOV AL, [M]
MUL [N]
MOV CX, AX

MOV SI, OFFSET A
READA:
	MOV AH, 01H
	INT 21H
	SUB AL, 30H
	MOV [SI], AL
	INC SI
	MOV AH, 02H
	MOV DL, 0AH
	INT 21H
	MOV DL, 0DH
	INT 21H
	LOOP READA

MOV AL, [M]
MUL [N]
MOV CX, AX

MOV SI, OFFSET B
READB:
	MOV AH, 01H
	INT 21H
	SUB AL, 30H
	MOV [SI], AL
	INC SI
	MOV AH, 02H
	MOV DL, 0AH
	INT 21H
	MOV DL, 0DH
	INT 21H
	LOOP READB

MOV SI, OFFSET B
MOV DI, OFFSET A

LOOP1:
	MOV AL, [SI]
	SUB [DI], AL
	INC SI
	INC DI
	LOOP LOOP1

MOV AL, [M]
MUL [N]
MOV CX, AX
MOV SI, OFFSET A

PRINTLOOP:
	PUSH CX
	PUSH SI
	INT 3
	MOV DL, [SI]
	XOR DH, DH
	CALL NUM_TO_STR
	LEA DX, OUTPUT
	MOV AH, 09H
	INT 21H
	MOV DL, ' '
	MOV AH, 02H
	INT 21H
	POP SI
	INC SI
	POP CX
	LOOP PRINTLOOP


MOV AH, 4CH
INT 21H

NUM_TO_STR PROC
; ARG IS PASSED THRU DX
MOV AX, DX
XOR DX, DX
XOR CX, CX ; TO KNOW THE COUNT OF 
MOV BX, 10 ; TO GET THE NUMBER
MOO1:
	CMP AX, 0
	JE EXIT
	INC CX ; TO KNOW HOW MUCH TO POP OFF
	DIV BX ; AX/=10
	PUSH DX ; PUSH THE REMAINDER TO STACK
	XOR DX, DX
	JMP MOO1
EXIT: ; POP OFF CX TIMES ONTO THE VARIABLE
	MOV SI, 0
	CMP CX, 0
	JE ZERO
	POP_OFF:
		POP AX
		ADD AL, 30H
		MOV [OUTPUT+SI], AL
		INC SI
		LOOP POP_OFF
RETURN:
	MOV [OUTPUT+SI], '$'
	RET
ZERO:
	MOV [OUTPUT+SI], 030H
	INC SI
	JMP RETURN
NUM_TO_STR ENDP

CODE ENDS
END START
