DATA SEGMENT
AS DB 50 DUP('$')
BS DB 50 DUP('$')
CALC DB 50 DUP('$')
A DW 10
B DW 2
SUM DW ?
DIFF DW ?
PROD DW ?
QUOT DW ?
DATA ENDS

CODE SEGMENT
ASSUME CS:CODE,DS:DATA,ES:DATA

PROC ENDL
MOV AH, 02H
MOV DL, 0AH
INT 21H
MOV AH, 02H
MOV DL, 0DH
INT 21H
RET
ENDL ENDP

STR_TO_NUM PROC
; EXPECTS SI TO HAVE OFFSET
MOV CL, [SI+1]
ADD SI,2

XOR BX, BX

MOO:
	MOV AX, BX
	MOV BX, 10
	MUL BX
	MOV BX, AX
	LODSB
	XOR AH, AH
	SUB AL, 30H
	ADD BX, AX
	LOOP MOO
	MOV AX, BX
	RET
STR_TO_NUM ENDP

NUM_TO_STR PROC
; ARG IS PASSED THRU DX
MOV AX, DX
XOR DX, DX
XOR CX, CX ; TO KNOW THE COUNT OF 
; IDEA IS TO PUSH TO STACK AND POP OFF TILL REQD
MOV BX, 10 ; TO GET THE NUMBER
MOO1:
	CMP AX, 0
	JE EXIT
	INC CX ; TO KNOW HOW MUCH TO POP OFF
	DIV BX ; AX/=10
	PUSH DX ; PUSH THE REMAINDER TO STACK
	XOR DX, DX
	JMP MOO1
EXIT: ; POP OFF CX TIMES ONTO THE VARIABLE
	MOV SI, 0
	CMP CX, 0
	JE ZERO
	POP_OFF:
		POP AX
		ADD AL, 30H
		MOV [CALC+SI], AL
		INC SI
		LOOP POP_OFF
RETURN:
	RET

ZERO:
	MOV [CALC+SI], 30H
	JMP RETURN

NUM_TO_STR ENDP

START:
MOV AX,DATA
MOV DS,AX
MOV ES,AX

MOV AH, 0AH
LEA DX, AS
INT 21H

MOV SI, OFFSET AS
CALL STR_TO_NUM
MOV A, AX

CALL ENDL

MOV AH, 0AH
LEA DX, BS
INT 21H

MOV SI, OFFSET BS
CALL STR_TO_NUM
MOV B, AX

MOV AX, A
MOV BX, B

MOV SUM, AX
ADD SUM, BX

MOV DX, [SUM]
CALL NUM_TO_STR

CALL ENDL
MOV DX, OFFSET CALC
MOV AH, 09H
INT 21H

MOV AX, A
MOV BX, B

MOV DIFF, AX
SUB DIFF, BX

LEA DI, CALC
MOV AL, '$'
MOV CX, 50

REP STOSB

CALL ENDL
MOV DX, [DIFF]
CALL NUM_TO_STR

MOV DX, OFFSET CALC
MOV AH, 09H
INT 21H

MOV AX, A
MOV BX, B

MUL BX
MOV PROD, AX

LEA DI, CALC
MOV AL, '$'
MOV CX, 50

REP STOSB

CALL ENDL
MOV DX, [PROD]
CALL NUM_TO_STR

MOV DX, OFFSET CALC
MOV AH, 09H
INT 21H

MOV AX, A
MOV BX, B
XOR DX, DX
DIV BX
MOV QUOT, AX

LEA DI, CALC
MOV AL, '$'
MOV CX, 50

REP STOSB

CALL ENDL
MOV DX, [QUOT]
CALL NUM_TO_STR

MOV DX, OFFSET CALC
MOV AH, 09H
INT 21H

MOV AH, 4CH
INT 21H

CODE ENDS
END START
